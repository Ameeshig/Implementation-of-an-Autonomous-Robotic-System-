from picamera import PiCamera
from time import sleep
from simple_function import *
import serial
from bluetooth import *
camera = PiCamera()
camera.rotation =180

#camera.capture("/home/MDPGroup26/shared/inputs/img3.jpg")
#print("done")
#sleep(1.4)

#bluetooth connection 
bt_Socket = BluetoothSocket(RFCOMM)
bt_Socket.bind(("",PORT_ANY))
bt_Socket.listen(1)
port = bt_Socket.getsockname()[1]
uuid = "ce33832c-09a0-4123-b350-6b03e048fb90"

print("Waiting for connection on RFCOMM channel %d" % port)
bt_client_sock, bt_client_info = bt_Socket.accept()
print("Accepted connection from ", bt_client_info, uuid)

#connect to stm
ser = serial.Serial(
        port='/dev/ttyUSB1',
        baudrate = 115200,
        parity = serial.PARITY_NONE,
        stopbits = serial.STOPBITS_ONE,
        bytesize = serial.EIGHTBITS,
        timeout=100,
        dsrdtr=False
    )
if (ser.isOpen() == False):
    ser.open()


# receiving start signal from android
from_bt = bt_client_sock.recv(1024)
from_bt = from_bt.decode('ascii').replace('\r\n', '')
print('output from bluetooth:' + from_bt) # shld be STM|Start

#the starting of robot
img_counter=1
s_counter = 1 # goes up to 3
take_pic(camera,img_counter)
message= "p000"
msg=''
ser.write(message.encode())
sleep(3)
img_id = read_text(img_counter) 
for_stm = decide_RL(img_id, s_counter)
print('first stm: '+ for_stm)


while (s_counter != 3):
    char = ser.read()# 1 byte
    msg = msg + char.decode('utf-8') 
    print(msg)
    if char == b'S':
        #if s_counter ==3:
            #break
        print(for_stm)
        ser.write(for_stm.encode()) # send stm left or right 
        img_counter+=1
        s_counter+=1# increment the image counter
        print ('img counter: '+ str(img_counter))
        print ('s counter: '+ str(s_counter))
        sleep(2)
        # time sleep for the robot to move into position agn
        if s_counter == 2:
            sleep(3)
            take_pic(camera,img_counter) # taking the second picture
            sleep(3) # for the file to get output into shared folder
            img_id=read_text(img_counter)
            for_stm = decide_RL(img_id, s_counter)
        print('stm:'+for_stm)


# end of task2
bt_client_sock.send("ENDED")
print("bluetooth disconnecting")
print("bluetooth disconnected")





# ref code in case
'''
for x in range (1,4):
    camera.capture("/home/MDPGroup26/shared/inputs/img"+ str(x) +".jpg")
    print("done" + str(x))
    sleep(2)
    try:
        f = open("../shared/outputs/Output {}.txt".format(x))
        id_raw = f.readlines()
        img_id = id_raw[0]
        f.close()
    except FileNotFoundError as f:
        img_id = 'fnf'
    print("image "+str(x)+" id: " + img_id)
    x+=1
'''
'''
ser.write(img_id.encode())
while (True):
    char = ser.read()# 1 byte
    msg = msg + char.decode('utf-8') 
    print(msg)
    if char == b'S':
        break
        
'''